@model ICollection<Minerva.Models.Web.Storage.GridItem>

@using GridMvc.Html;
@using GridMvc.Sorting;
@using res = Minerva.Resources;
@using ItemType = Minerva.Models.Web.Storage.ItemType;

@{
    ViewBag.Title = ViewBag.Title;
    Layout = "~/Views/Shared/_Layout.cshtml";
    var editing = ViewBag.Editing != null && ViewBag.Editing;
    var routeData = HttpContext.Current.Request.RequestContext.RouteData;
    var action = routeData.Values["action"].ToString();
    long? currentId = ViewBag.CurrentId;
}

<h2>@ViewBag.Title</h2>

<h4>@res.Layout.YouAreAt /folder name/</h4>

@if (editing)
{
    <div id="alerts"></div>
    
    <ul class="nav nav-pills">
        <li class="dropdown">
            <a data-toggle="dropdown" href="#" title="@res.Layout.AddDropDownTitle">@res.Layout.Add<b class="caret"></b></a>
            <ul class="dropdown-menu" role="menu" aria-labelledby="dLabel">
                <li><a href="#" title="@res.Layout.AddFileTitle" onclick="modalShow('#add-file-modal')">@res.Layout.File</a></li>
                <li><a href="#" title="@res.Layout.AddDirectoryTitle" onclick="modalShow('#add-dir-modal')">@res.Layout.Directory</a></li>
            </ul>
        </li>
        <li><a class="can-disable-items" href="#" title="@res.Layout.DeleteTitle" onclick="deleteItems()">@res.Layout.Delete</a></li>
        <li><a class="can-disable-items" href="#" title="@res.Layout.ShareTitle" onclick="shareItems()">@res.Layout.Share</a></li>
    </ul>
}

@Html.Hidden("CurrentId", currentId)

@Html.Grid(Model).Columns(columns =>
    {
        if (editing)
        {
            columns.Add()
                .Encoded(false)
                .Sanitized(false)
                .SetWidth(30)
                .RenderValueAs(item => Html.CheckBox("checked", false, new { onclick = "checkedItem()" }));
        }
        columns.Add(item => item.Name)
            .RenderValueAs(item =>
                item.Type == ItemType.File
                    ? string.Format("<a href=\"#\" onclick=\"showItem({0}, '{1}')\">{2}</a>", item.Id, item.Type, item.Name)
                    : Html.ActionLink(item.Name, action, new { id = item.Id}).ToString())
            .Encoded(false)
            .Sanitized(false)
            .Titled(res.Model.Name)
            .SortInitialDirection(GridSortDirection.Descending)
            .Sortable(true);
        columns.Add(item => item.LastModification)
            .Titled(res.Model.LastModification)
            .Sortable(true)
            .Format("{0:dd/MM/yyyy}");
    }
).WithPaging(20)

<h3>@res.Layout.Comments</h3>

@if (editing)
{
    <div id="add-file-modal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">@res.Layout.AddFile</h4>
                </div>
                <div class="modal-body">
                    <form role="form">
                        <div class="fileinput fileinput-new input-group" data-provides="fileinput">
                            <div class="form-control" data-trigger="fileinput"><i class="glyphicon glyphicon-file fileinput-exists"></i> <span class="fileinput-filename"></span></div>
                            <span class="input-group-addon btn btn-default btn-file"><span class="fileinput-new">@res.Layout.SelectFile</span><span class="fileinput-exists">@res.Layout.Change</span><input type="file" name="..."></span>
                            <a href="#" class="input-group-addon btn btn-default fileinput-exists" data-dismiss="fileinput">@res.Layout.Remove</a>
                        </div>

                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@res.Layout.Cancel</button>
                    <button type="button" class="btn btn-primary">@res.Layout.Add</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    var model = new Minerva.Models.Api.Directory.Add();
    <div id="add-dir-modal" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                    <h4 class="modal-title">@res.Layout.AddDirectory</h4>
                </div>
                <div class="modal-body">
                    <form role="form">
                        @Html.ValidationSummary()
                        @Html.Partial("_AddDirectoryPartial", model)
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">@res.Layout.Cancel</button>
                    <button type="button" class="btn btn-primary" onclick="dirSave()">@res.Layout.Add</button>
                </div>
            </div><!-- /.modal-content -->
        </div><!-- /.modal-dialog -->
    </div><!-- /.modal -->
    
    <script type="text/javascript">

        $(document).ready(function () {
            $('#add-file-modal').on('hidden.bs.modal', function (e) {
                $('#add-file-modal input').val('');
            })

            $('#add-dir-modal').on('hidden.bs.modal', function (e) {
                $('#add-dir-modal input').val('');
                $('#add-dir-modal textarea').val('');
                $('.validation-summary-errors li').empty();
                $('.validation-summary-errors li').hide();
                $('#add-dir-modal input').removeClass("input-validation-error");
                $('#add-dir-modal form').validate().resetForm();
            })

            $('div.grid-mvc thead tr').first().find('.grid-header-title span').first().append('<input type="checkbox" class="all-items" onclick="allItems()"/>');
        });

        function dirSave() {
            var form = $('#add-dir-modal form');
            var validator = form.validate();
            
            if (form.valid()) {
                var name = $('#add-dir-modal input#Name').val();
                var description = $('#add-dir-modal textarea#Description').val();
                var currentId = $('input:hidden#CurrentId').val();
                $('#add-dir-modal').modal('hide')

                var sendData = {
                    name: name,
                    parent_id: currentId,
                    description: description
                };

                $.ajax({
                    url: 'http://localhost/Minerva/api/Directory',
                    method: 'POST',
                    data: JSON.stringify(sendData),
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    cache: false,
                    success: function (data) {
                        showAlert('@res.Messages.DirectoryAdded', 'success');
                        location.reload(true);
                    },
                    error: function (data) {
                        showAlert('@res.Messages.DirectoryNotAdded', 'danger');
                    }
                });
            }
        }

        function shareItems() {
            showAlert('Nie zaznaczono żadnych elementów do udostępnienia!', 'warning');
        }

        function deleteItems() {
            showAlert('Nie zaznaczono żadnych elementów do usunięcia!', 'warning');
        }

        function allItems() {
            console.log('all items checked');
            var a = $('div.grid-mvc .all-items').prop('checked');
            $('div.grid-mvc tbody input:checkbox').prop('checked', a);
        }

        function checkedItem() {
            console.log('item checked');
            
            var allItemsCount = $('div.grid-mvc tbody input:checkbox').length;
            var selectedItems = $('div.grid-mvc tbody input:checked').length;

            $('div.grid-mvc .all-items').prop('checked', allItemsCount == selectedItems);
        }
    </script>
}

<div id="item-modal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
                <div class="info-general">
                    <p>Utworzone przez: </p>
                    <p>Data utworzenia: </p>
                    <p>Modyfikowane przez: </p>
                    <p>Data modyfikacji: </p>
                </div>
                <hr />
                <div class="comments">
                    <h4>Komentarze</h4>


                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-dismiss="modal">@res.Layout.Hide</button>
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<script type="text/javascript">

    function showItem(id, type) {
        //todo pobranie info o elemencie

        $('#item-modal .modal-title').val('[nazwa elementu]');

        modalShow('#item-modal');
    }

    function modalShow(param) {
        $(param).modal('show');
    }

    function showAlert(message, type) {
        if (type != 'warning' && type != 'info' && type == 'success' && type != 'danger') {
            type = 'info';
        }

        var msg = '<div class="alert alert-' + type + ' alert-dismissable">';
        msg += '<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>';
        msg += message + "</div>";

        $('#alerts').slideUp(function () {
            $('#alerts').children().remove();
            $('#alerts').append(msg);
            $('#alerts').slideDown();
        });
    }

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}