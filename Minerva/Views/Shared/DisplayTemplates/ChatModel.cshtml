@model Minerva.Models.Web.Comment.ChatModel

@using res = Minerva.Resources

<div id="comments-@Model.ItemId" class="container">
    <ul id="discussion"></ul>
    <input type="text" id="message" class="form-control" />
    <input type="button" id="sendmessage" class="btn" value="@res.Layout.Send" />
    <input type="hidden" id="username" value="@Model.UserName" />
    <input type="hidden" id="itemId" value="@Model.ItemId" />
    <div class="comments-alerts"></div>
</div>

@*  Script references.
    Reference the SignalR library. *@

@Scripts.Render("~/bundles/jquery-signalR")

    @*  Reference the autogenerated SignalR hub script.             *@
    <script src="~/signalr/hubs"></script>
    @*  SignalR script to update the chat page and send messages.   *@
    <script>
    $(function () {
        @* Reference the auto-generated proxy for the hub.          *@
        var comments = $.connection.commentsHub;

        comments.client.addNewMessage = function (name, message, time) {
            $('#discussion').append(prepareMessage(name, message, time));
        };

        comments.client.addErrorMessage = function (message) {
            var msg = '<div class="alert alert-danger alert-dismissable">';
            msg += '<button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>';
            msg += message + "</div>";

            $('.comments-alerts').slideUp(function () {
                $('.comments-alerts').children().remove();
                $('.comments-alerts').append(msg);
                $('.comments-alerts').slideDown();
            });
        };

        comments.client.addBeforeMessages = function (messages) {
            for (var i = 0; i < messages.length; i++) {
                var m = prepareMessage(messages[i].Author, messages[i].Body, messages[i].SendTime);
                $('#discussion').append(m);
            }
        };

        function prepareMessage(name, message, time) {
            return '<li><strong>' + htmlEncode(name)
                + '</strong>: ' + htmlEncode(message) + '; ' + htmlEncode(time) + '</li>';
        }

        @* Start the connection.    *@
        $.connection.hub.start().done(function () {
            @* Join to item group   *@
            comments.server.joinItemGroup($('#itemId').val());

            @* Get messages sent before join to group *@
            comments.server.getBeforeMessages($('#itemId').val(), new Date());

            $('#sendmessage').click(function () {
                sendMessage();
            });
            $('#message').keypress(function (e) {
                if (e.which == 13) {
                    @*  Send message if press ENTER *@
                    sendMessage();
                }
            });
        });

        function sendMessage() {
            if ($('#message').val().length > 0) {
                @* Call the Send method on the hub.                 *@
                comments.server.send($('#username').val(), $('#itemId').val(), $('#message').val());

                @* Clear text box and reset focus for next comment. *@
                $('#message').val('').focus();
            }
        }
    });

    function htmlEncode(value) {
        var encodedValue = $('<div />').text(value).html();
        return encodedValue;
    }
    </script>
